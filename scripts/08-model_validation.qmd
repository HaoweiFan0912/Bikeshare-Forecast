```{r}
poisson_glm <- readRDS(here::here("models/Galbraith_Rd___King's_College_Rd.rds"))

data <- read_parquet(here::here("data/02-analysis_data/start.parquet")) %>% filter(station_name == "Galbraith Rd / King's College Rd
")%>%
    mutate(
      hour = hour(time),
      day = day(time),
      month = month(time),
      year = year(time)
    )







# 1. Residual diagnostics
# Extract residuals
pearson_residuals <- residuals(poisson_glm, type = "pearson")
deviance_residuals <- residuals(poisson_glm, type = "deviance")

# Plot residuals vs fitted values
ggplot(data, aes(x = fitted(poisson_glm), y = pearson_residuals)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
  labs(title = "Pearson Residuals vs Fitted Values", x = "Fitted Values", y = "Pearson Residuals")

```





```{r}
# Load necessary library
library(bayesplot)
model=poisson_glm
# 1. Trace Plots
mcmc_trace(model, pars = c("(Intercept)", "your_predictor_names_here"))

# 2. Posterior Distribution
mcmc_dens_overlay(model, pars = c("(Intercept)", "your_predictor_names_here"))

# 3. R-hat values to check convergence
summary(model)$rhat

# 4. Effective sample size
summary(model)$n_eff

# 5. Posterior Predictive Checks
pp_check(model, plotfun = "dens_overlay", nreps = 100) # Overlay of predictive densities


# 6. Residual Analysis
residuals <- residuals(model, type = "response")
fitted <- fitted(model)
plot(fitted, residuals, main = "Residuals vs Fitted", xlab = "Fitted values", ylab = "Residuals")
abline(h = 0, col = "red")


posterior_draws <- as.matrix(model)

# Compute credible intervals
credible_intervals <- apply(posterior_draws, 2, function(x) quantile(x, probs = c(0.025, 0.975)))
print(credible_intervals)


# Replace "your_predictor_names_here" with the actual names of your predictors

```


