#### Preamble ####
# Purpose: Models... [...UPDATE THIS...]
# Author: Rohan Alexander [...UPDATE THIS...]
# Date: 11 February 2023 [...UPDATE THIS...]
# Contact: rohan.alexander@utoronto.ca [...UPDATE THIS...]
# License: MIT
# Pre-requisites: [...UPDATE THIS...]
# Any other information needed? [...UPDATE THIS...]


```{r}
#| include: false
#| warning: false
#| message: false
#### Workspace setup ####
set.seed(912)
# List of necessary packages
packages <- c("arrow", "lubridate", "tidyverse")
# Install missing packages
missing_packages <- packages[!(packages %in% installed.packages()[, "Package"])]
install.packages(missing_packages)
# Load packages
lapply(packages, library, character.only = TRUE)

#### Read data ####
start <- read_parquet(here::here("data/02-analysis_data/start.parquet"))
stop <- read_parquet(here::here("data/02-analysis_data/stop.parquet"))
```

```{r}
#| warning: false
#| message: false
start_asdate <- start 
start_asdate$time <- as.Date(start_asdate$time)


daily_counts <- start_asdate %>%
  group_by(time) %>%
  summarise(total_count = sum(count))

ggplot(data = daily_counts, aes(x = time, y = total_count)) +
  geom_point() +
  labs(title = "Daily usage from January 2017 to September 2024", x = "Time", y = "Count") +
  theme_minimal()+  
  geom_smooth(method = "lm")  
```

```{r}
options(scipen = 999)

start_astime <- start 
start_astime$time <- as.POSIXct(start_astime$time)


start_astime <- start_astime %>%
  mutate(time_interval = case_when(
    hour(time) >= 0 & hour(time) < 4 ~ "00:00 - 04:00",
    hour(time) >= 4 & hour(time) < 8 ~ "04:00 - 08:00",
    hour(time) >= 8 & hour(time) < 12 ~ "08:00 - 12:00",
    hour(time) >= 12 & hour(time) < 16 ~ "12:00 - 16:00",
    hour(time) >= 16 & hour(time) < 20 ~ "16:00 - 20:00",
    hour(time) >= 20 & hour(time) < 24 ~ "20:00 - 00:00"
  ))


total_counts <- start_astime %>%
  group_by(time_interval) %>%
  summarise(count = sum(count, na.rm = TRUE))


ggplot(data = total_counts, aes(x = time_interval, y = count, fill = time_interval)) +
  geom_bar(stat = "identity") +
  labs(title = "Total usage during different time periods from January 2017 to September 2024", 
       x = "Time interval", y = "Count") +
  theme_minimal() +
  theme(legend.position = "none") 
```
```{r, fig.width=10}
options(scipen = 999)


# Create a new column for the time interval (every 1day)
start_1day <- start %>%
  mutate(date = as.Date(time))
stop_1day <- stop %>%
  mutate(date = as.Date(time))
start_1day <- start_1day %>% select(-time)
stop_1day <- stop_1day %>% select(-time)

# Group by from(to)_station_name and the new interval, then count the occurrences
start_1day1 <- start_1day %>%
  group_by(station_name, date) %>%
  summarise(total_count = sum(count), .groups = "drop") %>%
  ungroup()
stop_1day1 <- stop_1day %>%
  group_by(station_name, date) %>%
  summarise(total_count = sum(count), .groups = "drop") %>%
  ungroup()


average_counts_start <- start_1day1 %>%
  group_by(station_name) %>%
  summarize(average_count = mean(total_count, na.rm = TRUE))

average_counts_stop <- stop_1day1 %>%
  group_by(station_name) %>%
  summarize(average_count = mean(total_count, na.rm = TRUE))

merged_data <- merge(average_counts_start, average_counts_stop, by.x = "station_name", by.y = "station_name", all = TRUE)


merged_data <- merged_data %>%
  mutate(count_difference = ifelse((average_count.y - average_count.x) >= 0, 
                                   ceiling(average_count.y - average_count.x), 
                                   floor(average_count.y - average_count.x)))


ggplot(merged_data, aes(x = station_name, y = count_difference)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Difference of daily average of bicycle parking and departure volumes for each station",
       x = "Station Name",
       y = "Parking volume minus departure volume")+
  ylim(-4, 3)+
  coord_flip()
```

